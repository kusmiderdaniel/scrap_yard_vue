{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'Client',\n  data() {\n    return {\n      client: {\n        invoices: []\n      }\n    };\n  },\n  mounted() {\n    this.getClient();\n  },\n  methods: {\n    getClient() {\n      const clientID = this.$route.params.id;\n      axios.get(`/api/v1/clients/${clientID}`).then(response => {\n        this.client = response.data;\n      }).catch(error => {\n        console.log(JSON.stringify(error));\n      });\n    }\n  },\n  computed: {\n    unpaidInvoices() {\n      return this.client.invoices.filter(invoice => invoice.is_paid === false);\n    },\n    paidInvoices() {\n      return this.client.invoices.filter(invoice => invoice.is_paid === true);\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","client","invoices","mounted","getClient","methods","clientID","$route","params","id","get","then","response","catch","error","console","log","JSON","stringify","computed","unpaidInvoices","filter","invoice","is_paid","paidInvoices"],"sources":["/Users/danielkusmider/Library/CloudStorage/OneDrive-Personal/Docs/Projects/ScrapYard/scrap_yard_vue/src/views/dashboard/Client.vue"],"sourcesContent":["<template>\n    <div class=\"page-client\">\n        <nav class=\"breadcrumb\" aria-label=\"breadcrumbs\">\n            <ul>\n                <li><router-link to=\"/dashboard\">Dashboard</router-link></li>\n                <li><router-link to=\"/dashboard/clients\">Klienci</router-link></li>\n                <li class=\"is-active\"><router-link :to=\"{ name: 'Client', params: { id: client.id }}\" aria-current=\"true\">{{ client.name }}</router-link></li>\n            </ul>\n        </nav>\n        \n        <div class=\"columns is-multiline\">\n            <div class=\"column is-12\">\n                <h1 class=\"title\">{{ client.name }}</h1>\n\n                <router-link :to=\"{ name: 'EditClient', params: { id: client.id }}\" class=\"button is-light mt-4\">Edit</router-link>\n            </div>\n\n            <div class=\"column is-12\">\n                <h2 class=\"subtitle\">Dane kontaktowe</h2>\n\n                <p><strong>{{ client.name }}</strong></p>\n                \n                <p v-if=\"client.address1\">{{ client.address1 }}</p>\n                <p v-if=\"client.address2\">{{ client.address2 }}</p>\n                <p v-if=\"client.zipcode || client.place\">{{ client.zipcode }} {{ client.place }}</p>\n            </div>\n\n            <!-- <div class=\"column is-12\" v-if=\"unpaidInvoices.length\">\n                <div class=\"box\">\n                    <h2 class=\"subtitle\">Unpaid invoices</h2>\n\n                    <table class=\"table is-fullwidth\">\n                        <thead>\n                            <tr>\n                                <th>#</th>\n                                <th>Amount</th>\n                                <th>Due date</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                            <tr\n                                v-for=\"invoice in unpaidInvoices\"\n                                v-bind:key=\"invoice.id\"\n                            >\n                                <td>{{ invoice.invoice_number }}</td>\n                                <td>{{ invoice.gross_amount }}</td>\n                                <td>{{ invoice.get_due_date_formatted }}</td>\n                                <td>\n                                    <router-link :to=\"{ name: 'Invoice', params: { id: invoice.id } }\">Details</router-link>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div> -->\n\n            <!-- <div class=\"column is-12\" v-if=\"paidInvoices.length\">\n                <div class=\"box\">\n                    <h2 class=\"subtitle\">Paid invoices</h2>\n\n                    <table class=\"table is-fullwidth\">\n                        <thead>\n                            <tr>\n                                <th>#</th>\n                                <th>Amount</th>\n                                <th>Due date</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                            <tr\n                                v-for=\"invoice in paidInvoices\"\n                                v-bind:key=\"invoice.id\"\n                            >\n                                <td>{{ invoice.invoice_number }}</td>\n                                <td>{{ invoice.gross_amount }}</td>\n                                <td>{{ invoice.get_due_date_formatted }}</td>\n                                <td>\n                                    <router-link :to=\"{ name: 'Invoice', params: { id: invoice.id } }\">Details</router-link>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div> -->\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n    name: 'Client',\n    data () {\n        return {\n            client: {\n                invoices: []\n            }\n        }\n    },\n    mounted() {\n        this.getClient()\n    },\n    methods: {\n        getClient() {\n            const clientID = this.$route.params.id\n\n            axios\n                .get(`/api/v1/clients/${clientID}`)\n                .then(response => {\n                    this.client = response.data\n                })\n                .catch(error => {\n                    console.log(JSON.stringify(error))\n                })\n        }\n    },\n    computed: {\n        unpaidInvoices() {\n            return this.client.invoices.filter(invoice => invoice.is_paid === false)\n        },\n        paidInvoices() {\n            return this.client.invoices.filter(invoice => invoice.is_paid === true)\n        }\n    }\n}\n</script>"],"mappings":"AA6FA,OAAOA,KAAI,MAAO,OAAM;AAExB,eAAe;EACXC,IAAI,EAAE,QAAQ;EACdC,IAAGA,CAAA,EAAK;IACJ,OAAO;MACHC,MAAM,EAAE;QACJC,QAAQ,EAAE;MACd;IACJ;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,SAAS,CAAC;EACnB,CAAC;EACDC,OAAO,EAAE;IACLD,SAASA,CAAA,EAAG;MACR,MAAME,QAAO,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAC;MAErCX,KAAI,CACCY,GAAG,CAAE,mBAAkBJ,QAAS,EAAC,EACjCK,IAAI,CAACC,QAAO,IAAK;QACd,IAAI,CAACX,MAAK,GAAIW,QAAQ,CAACZ,IAAG;MAC9B,CAAC,EACAa,KAAK,CAACC,KAAI,IAAK;QACZC,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,SAAS,CAACJ,KAAK,CAAC;MACrC,CAAC;IACT;EACJ,CAAC;EACDK,QAAQ,EAAE;IACNC,cAAcA,CAAA,EAAG;MACb,OAAO,IAAI,CAACnB,MAAM,CAACC,QAAQ,CAACmB,MAAM,CAACC,OAAM,IAAKA,OAAO,CAACC,OAAM,KAAM,KAAK;IAC3E,CAAC;IACDC,YAAYA,CAAA,EAAG;MACX,OAAO,IAAI,CAACvB,MAAM,CAACC,QAAQ,CAACmB,MAAM,CAACC,OAAM,IAAKA,OAAO,CAACC,OAAM,KAAM,IAAI;IAC1E;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}