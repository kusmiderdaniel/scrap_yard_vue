{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { toast } from 'bulma-toast';\nimport EditItemForm from '@/components/EditItemForm.vue';\nexport default {\n  name: 'EditReceipt',\n  components: {\n    EditItemForm\n  },\n  data() {\n    return {\n      receipt: {\n        receipt_number: '',\n        date: new Date().toISOString().substr(0, 10),\n        client: '',\n        receipt_items: [],\n        gross_amount: 0\n      },\n      tempItems: [],\n      client: {},\n      clients: [],\n      team: {}\n    };\n  },\n  async mounted() {\n    await this.getReceipt(), await this.getClients(), await this.getTeam();\n  },\n  methods: {\n    getReceipt() {\n      const receiptID = this.$route.params.id;\n      axios.get(`/api/v1/receipts/${receiptID}`).then(response => {\n        this.receipt = response.data;\n        console.log(this.receipt.receipt_items);\n        for (let i = 0; i < this.receipt.receipt_items.length; i++) {\n          console.log('running');\n          this.tempItems[i].id = this.receipt.receipt_items[i].source_id;\n          this.tempItems[i].name = this.receipt.receipt_items[i].name;\n          this.tempItems[i].item_code = this.receipt.receipt_items[i].item_code;\n          this.tempItems[i].buy_price = this.receipt.receipt_items[i].buy_price;\n          this.tempItems[i].item_num = this.receipt.receipt_items[i].item_num;\n          this.tempItems[i].quantity = this.receipt.receipt_items[i].quantity;\n          this.tempItems[i].source_id = this.receipt.receipt_items[i].source_id;\n        }\n        console.log(this.tempItems);\n        this.getClient();\n      }).catch(error => {\n        console.log(JSON.stringify(error));\n      });\n    },\n    getClient() {\n      const clientID = this.receipt.client;\n      this.client = this.clients.find(client => client.id === clientID);\n    },\n    getClients() {\n      axios.get('/api/v1/clients/').then(response => {\n        this.clients = response.data;\n      }).catch(error => {\n        console.log(JSON.stringify(error));\n      });\n    },\n    getTeam() {\n      axios.get('/api/v1/teams/').then(response => {\n        this.team = response.data[0];\n        const formattedDate = this.formatDate(this.receipt.date);\n        this.receipt.receipt_number = `${this.team.next_receipt_number}/${formattedDate}`;\n      }).catch(error => {\n        console.log(JSON.stringify(error));\n      });\n    },\n    formatDate(date) {\n      const options = {\n        day: '2-digit',\n        month: '2-digit',\n        year: 'numeric'\n      };\n      return new Date(date).toLocaleDateString(undefined, options);\n    },\n    addItem() {\n      this.receipt.receipt_items.push({\n        item_num: this.receipt.receipt_items.length,\n        category: '',\n        name: '',\n        buy_price: '',\n        quantity: 1\n      });\n      console.log(this.receipt.receipt_items);\n    },\n    deleteItem(selectedItem) {\n      // Remove the item from the array\n      console.log(this.receipt.receipt_items);\n      const index = this.receipt.receipt_items.indexOf(selectedItem);\n      if (index > -1) {\n        this.receipt.receipt_items.splice(index, 1);\n      }\n\n      // Update the gross amount after deletion\n      this.updateTotals();\n    },\n    updateTotals(changedItem) {\n      let gross_amount = 0;\n      for (let i = 0; i < this.receipt.receipt_items.length; i++) {\n        gross_amount += this.receipt.receipt_items[i].gross_amount;\n      }\n      this.receipt.gross_amount = Number(gross_amount).toFixed(2);\n    },\n    submitForm() {\n      // Validation checks\n      if (!this.receipt.client) {\n        toast({\n          message: 'Proszę wybrać kontrahenta.',\n          type: 'is-danger',\n          dismissible: true,\n          pauseOnHover: true,\n          duration: 3000,\n          position: 'bottom-right'\n        });\n        return;\n      }\n      for (let i = 0; i < this.receipt.receipt_items.length; i++) {\n        const item = this.receipt.receipt_items[i];\n        if (!item.name || !item.buy_price || !item.quantity) {\n          toast({\n            message: 'Proszę wypełnić wszystkie pola dla produktów.',\n            type: 'is-danger',\n            dismissible: true,\n            pauseOnHover: true,\n            duration: 3000,\n            position: 'bottom-right'\n          });\n          return;\n        }\n      }\n      this.receipt.client_name = this.receipt.client.name;\n      this.receipt.client_email = this.receipt.client.email;\n      this.receipt.client_doc_number = this.receipt.client.doc_number;\n      this.receipt.client_address1 = this.receipt.client.address1;\n      this.receipt.client_address2 = this.receipt.client.address2;\n      this.receipt.client_zipcode = this.receipt.client.zipcode;\n      this.receipt.client_place = this.receipt.client.place;\n      this.receipt.client = this.receipt.client.id;\n      let selectedItemName = '';\n      for (let i = 0; i < this.receipt.receipt_items.length; i++) {\n        selectedItemName = this.receipt.receipt_items[i].name.name;\n        this.receipt.receipt_items[i].name = selectedItemName;\n      }\n      axios.post('/api/v1/receipts/', this.receipt).then(response => {\n        toast({\n          message: 'Kwit został dodany',\n          type: 'is-success',\n          dismissible: true,\n          pauseOnHover: true,\n          duration: 2000,\n          position: 'bottom-right'\n        });\n        this.$router.push('/dashboard/receipts');\n      }).catch(error => {\n        console.log(JSON.stringify(error));\n        toast({\n          message: 'Wystąpił błąd podczas dodawania kwitu. Spróbuj ponownie.',\n          type: 'is-danger',\n          dismissible: true,\n          pauseOnHover: true,\n          duration: 3000,\n          position: 'bottom-right'\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","toast","EditItemForm","name","components","data","receipt","receipt_number","date","Date","toISOString","substr","client","receipt_items","gross_amount","tempItems","clients","team","mounted","getReceipt","getClients","getTeam","methods","receiptID","$route","params","id","get","then","response","console","log","i","length","source_id","item_code","buy_price","item_num","quantity","getClient","catch","error","JSON","stringify","clientID","find","formattedDate","formatDate","next_receipt_number","options","day","month","year","toLocaleDateString","undefined","addItem","push","category","deleteItem","selectedItem","index","indexOf","splice","updateTotals","changedItem","Number","toFixed","submitForm","message","type","dismissible","pauseOnHover","duration","position","item","client_name","client_email","email","client_doc_number","doc_number","client_address1","address1","client_address2","address2","client_zipcode","zipcode","client_place","place","selectedItemName","post","$router"],"sources":["/Users/danielkusmider/Library/CloudStorage/OneDrive-Personal/Docs/Projects/ScrapYard/scrap_yard_vue/src/views/dashboard/EditReceipt.vue"],"sourcesContent":["<template>\n    <div class=\"page-edit-receipt\">\n        <nav class=\"breadcrumb\" aria-label=\"breadcrumbs\">\n            <ul>\n                <li><router-link to=\"/dashboard\">Dashboard</router-link></li>\n                <li><router-link to=\"/dashboard/receipts\">Kwity</router-link></li>\n                <li class=\"is-active\"><router-link to=\"/dashboard/receipts/add-receipt\" aria-current=\"true\">Nowy kwit</router-link></li>\n            </ul>\n        </nav>\n\n        <div class=\"columns is-multiline\">\n            <div class=\"column is-12\">\n                <h1 class=\"title\">Edytuj kwit</h1>\n            </div>\n\n            <div class=\"column is-3\">\n                <div class=\"field\">\n                    <label>Numer kwitu</label>\n\n                    <div class=\"control\">\n                        <input type=\"text\" class=\"input\" v-model=\"receipt.receipt_number\">\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"column is-3\">\n                <div class=\"field\">\n                    <label>Data kwitu</label>\n\n                    <div class=\"control\">\n                        <input type=\"date\" name=\"receipt_date\" class=\"input\" v-model=\"receipt.date\">\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"column is-12\">\n                <h2 class=\"is-size-5 mb-4\">Kontrahent</h2>\n\n                <div class=\"select\">\n                    <select name=\"client\" v-model=\"receipt.client\">\n                        <option \n                            v-for=\"client in clients\"\n                            v-bind:key=\"client.id\"\n                            v-bind:value=\"client.id\"\n                        >\n                            {{ client.name }}\n                        </option>\n                    </select>\n                </div>\n\n                <div class=\"box mt-4\" v-if=\"client\">\n                    <p class=\"title is-5\">Dane kontaktowe</p>\n                    <p><strong>Nr dokumentu:</strong> {{ client.doc_number }}</p>\n                    <p><strong>Email:</strong> {{ client.email }}</p>\n                    <p v-if=\"client.address1\">{{ client.address1 }}</p>\n                    <p v-if=\"client.address2\">{{ client.address2 }}</p>\n                    <p v-if=\"client.zipcode || client.place\">{{ client.zipcode }} {{ client.place }}</p>\n                </div>\n            </div>\n\n            <div class=\"column is-12\">\n                <h2 class=\"is-size-5 mb-4\">Produkty</h2>\n\n                <EditItemForm\n                    v-for=\"item in tempItems\"\n                    v-bind:key=\"item.item_num\"\n                    v-bind:initialItem=\"item\"\n                    @updatePrice=\"updateTotals\"\n                    @deleteItem=\"deleteItem(item)\"\n                >\n                </EditItemForm>\n\n                <button class=\"button is-light\" @click=\"addItem\">+</button>\n            </div>\n        </div>\n\n        <div class=\"column is-12\">\n            <h2 class=\"is-size-5 mb-4\">Podsumowanie</h2>\n\n            <p><strong>Do wypłaty</strong>: {{ receipt.gross_amount }} zł</p>\n        </div>\n\n        <div class=\"column is-12\">\n            <button class=\"button is-success\" @click=\"submitForm\">Zapisz</button>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport { toast } from 'bulma-toast'\n\nimport EditItemForm from '@/components/EditItemForm.vue'\n\nexport default {\n    name: 'EditReceipt',\n    components: {\n        EditItemForm\n    },\n    data() {\n        return {\n            receipt: {\n                receipt_number: '',\n                date: new Date().toISOString().substr(0, 10),\n                client: '',\n                receipt_items: [],\n                gross_amount: 0\n            },\n            tempItems: [],\n            client: {},\n            clients: [],\n            team: {}\n        }\n    },\n    async mounted() {\n        await this.getReceipt(),\n        await this.getClients(),\n        await this.getTeam()\n    },\n    methods: {\n        getReceipt() {\n            const receiptID = this.$route.params.id\n\n            axios\n                .get(`/api/v1/receipts/${receiptID}`)\n                .then(response => {\n                    this.receipt = response.data\n                    console.log(this.receipt.receipt_items)\n                    for (let i = 0; i < this.receipt.receipt_items.length; i++) {\n                        console.log('running')\n                        this.tempItems[i].id = this.receipt.receipt_items[i].source_id\n                        this.tempItems[i].name = this.receipt.receipt_items[i].name\n                        this.tempItems[i].item_code = this.receipt.receipt_items[i].item_code\n                        this.tempItems[i].buy_price = this.receipt.receipt_items[i].buy_price\n                        this.tempItems[i].item_num = this.receipt.receipt_items[i].item_num\n                        this.tempItems[i].quantity = this.receipt.receipt_items[i].quantity\n                        this.tempItems[i].source_id = this.receipt.receipt_items[i].source_id\n                    }\n                    console.log(this.tempItems)\n                    this.getClient()\n                })\n                .catch(error => {\n                    console.log(JSON.stringify(error))\n                })\n        },\n        getClient() {\n            const clientID = this.receipt.client\n            this.client = this.clients.find((client) => client.id === clientID)\n\n        },\n        getClients() {\n            axios\n                .get('/api/v1/clients/')\n                .then(response => {\n                    this.clients = response.data\n                })\n                .catch(error => {\n                    console.log(JSON.stringify(error))\n                })\n        },\n        getTeam() {\n            axios\n                .get('/api/v1/teams/')\n                .then(response => {\n                    this.team = response.data[0]\n\n                    const formattedDate = this.formatDate(this.receipt.date)\n\n                    this.receipt.receipt_number = `${this.team.next_receipt_number}/${formattedDate}`\n                })\n                .catch(error => {\n                    console.log(JSON.stringify(error))\n                })\n        },\n        formatDate(date) {\n            const options = { day: '2-digit', month: '2-digit', year: 'numeric' }\n            return new Date(date).toLocaleDateString(undefined, options)\n        },\n        addItem() {\n            this.receipt.receipt_items.push({\n                item_num: this.receipt.receipt_items.length,\n                category: '',\n                name: '',\n                buy_price: '',\n                quantity: 1,\n            })\n            console.log(this.receipt.receipt_items)\n        },\n        deleteItem(selectedItem) {\n            // Remove the item from the array\n            console.log(this.receipt.receipt_items)\n            \n            const index = this.receipt.receipt_items.indexOf(selectedItem)\n            if (index > -1) {\n                this.receipt.receipt_items.splice(index, 1)\n            }\n\n            // Update the gross amount after deletion\n            this.updateTotals()\n        },\n        updateTotals(changedItem) {\n            let gross_amount = 0\n\n            for (let i = 0; i < this.receipt.receipt_items.length; i++) {\n                gross_amount += this.receipt.receipt_items[i].gross_amount\n            }\n\n            this.receipt.gross_amount = Number(gross_amount).toFixed(2)\n        },\n        submitForm() {\n            // Validation checks\n            if (!this.receipt.client) {\n                toast({\n                    message: 'Proszę wybrać kontrahenta.',\n                    type: 'is-danger',\n                    dismissible: true,\n                    pauseOnHover: true,\n                    duration: 3000,\n                    position: 'bottom-right',\n                });\n                return;\n            }\n\n            for (let i = 0; i < this.receipt.receipt_items.length; i++) {\n                const item = this.receipt.receipt_items[i];\n\n                if (!item.name || !item.buy_price || !item.quantity) {\n                    toast({\n                        message: 'Proszę wypełnić wszystkie pola dla produktów.',\n                        type: 'is-danger',\n                        dismissible: true,\n                        pauseOnHover: true,\n                        duration: 3000,\n                        position: 'bottom-right',\n                    });\n                    return;\n                }\n            }\n\n            this.receipt.client_name = this.receipt.client.name\n            this.receipt.client_email = this.receipt.client.email\n            this.receipt.client_doc_number = this.receipt.client.doc_number\n            this.receipt.client_address1 = this.receipt.client.address1\n            this.receipt.client_address2 = this.receipt.client.address2\n            this.receipt.client_zipcode = this.receipt.client.zipcode\n            this.receipt.client_place = this.receipt.client.place\n            this.receipt.client = this.receipt.client.id\n\n            let selectedItemName = ''\n            for (let i = 0; i < this.receipt.receipt_items.length; i++) {\n                selectedItemName = this.receipt.receipt_items[i].name.name\n                this.receipt.receipt_items[i].name = selectedItemName\n            }\n\n            axios\n                .post('/api/v1/receipts/', this.receipt)\n                .then(response => {\n                    toast({\n                        message: 'Kwit został dodany',\n                        type: 'is-success',\n                        dismissible: true,\n                        pauseOnHover: true,\n                        duration: 2000,\n                        position: 'bottom-right',\n                    })\n\n                    this.$router.push('/dashboard/receipts')\n                })\n                .catch(error => {\n                    console.log(JSON.stringify(error))\n                    toast({\n                        message: 'Wystąpił błąd podczas dodawania kwitu. Spróbuj ponownie.',\n                        type: 'is-danger',\n                        dismissible: true,\n                        pauseOnHover: true,\n                        duration: 3000,\n                        position: 'bottom-right',\n                    })\n                })\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\">\n    #item-select {\n        width: 120%;\n    }\n    .select select {\n        width: 100%;\n    }\n</style>"],"mappings":";AAyFA,OAAOA,KAAI,MAAO,OAAM;AACxB,SAASC,KAAI,QAAS,aAAY;AAElC,OAAOC,YAAW,MAAO,+BAA8B;AAEvD,eAAe;EACXC,IAAI,EAAE,aAAa;EACnBC,UAAU,EAAE;IACRF;EACJ,CAAC;EACDG,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,OAAO,EAAE;QACLC,cAAc,EAAE,EAAE;QAClBC,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC;QAC5CC,MAAM,EAAE,EAAE;QACVC,aAAa,EAAE,EAAE;QACjBC,YAAY,EAAE;MAClB,CAAC;MACDC,SAAS,EAAE,EAAE;MACbH,MAAM,EAAE,CAAC,CAAC;MACVI,OAAO,EAAE,EAAE;MACXC,IAAI,EAAE,CAAC;IACX;EACJ,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACZ,MAAM,IAAI,CAACC,UAAU,CAAC,CAAC,EACvB,MAAM,IAAI,CAACC,UAAU,CAAC,CAAC,EACvB,MAAM,IAAI,CAACC,OAAO,CAAC;EACvB,CAAC;EACDC,OAAO,EAAE;IACLH,UAAUA,CAAA,EAAG;MACT,MAAMI,SAAQ,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAC;MAEtC1B,KAAI,CACC2B,GAAG,CAAE,oBAAmBJ,SAAU,EAAC,EACnCK,IAAI,CAACC,QAAO,IAAK;QACd,IAAI,CAACvB,OAAM,GAAIuB,QAAQ,CAACxB,IAAG;QAC3ByB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACzB,OAAO,CAACO,aAAa;QACtC,KAAK,IAAImB,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAI,IAAI,CAAC1B,OAAO,CAACO,aAAa,CAACoB,MAAM,EAAED,CAAC,EAAE,EAAE;UACxDF,OAAO,CAACC,GAAG,CAAC,SAAS;UACrB,IAAI,CAAChB,SAAS,CAACiB,CAAC,CAAC,CAACN,EAAC,GAAI,IAAI,CAACpB,OAAO,CAACO,aAAa,CAACmB,CAAC,CAAC,CAACE,SAAQ;UAC7D,IAAI,CAACnB,SAAS,CAACiB,CAAC,CAAC,CAAC7B,IAAG,GAAI,IAAI,CAACG,OAAO,CAACO,aAAa,CAACmB,CAAC,CAAC,CAAC7B,IAAG;UAC1D,IAAI,CAACY,SAAS,CAACiB,CAAC,CAAC,CAACG,SAAQ,GAAI,IAAI,CAAC7B,OAAO,CAACO,aAAa,CAACmB,CAAC,CAAC,CAACG,SAAQ;UACpE,IAAI,CAACpB,SAAS,CAACiB,CAAC,CAAC,CAACI,SAAQ,GAAI,IAAI,CAAC9B,OAAO,CAACO,aAAa,CAACmB,CAAC,CAAC,CAACI,SAAQ;UACpE,IAAI,CAACrB,SAAS,CAACiB,CAAC,CAAC,CAACK,QAAO,GAAI,IAAI,CAAC/B,OAAO,CAACO,aAAa,CAACmB,CAAC,CAAC,CAACK,QAAO;UAClE,IAAI,CAACtB,SAAS,CAACiB,CAAC,CAAC,CAACM,QAAO,GAAI,IAAI,CAAChC,OAAO,CAACO,aAAa,CAACmB,CAAC,CAAC,CAACM,QAAO;UAClE,IAAI,CAACvB,SAAS,CAACiB,CAAC,CAAC,CAACE,SAAQ,GAAI,IAAI,CAAC5B,OAAO,CAACO,aAAa,CAACmB,CAAC,CAAC,CAACE,SAAQ;QACxE;QACAJ,OAAO,CAACC,GAAG,CAAC,IAAI,CAAChB,SAAS;QAC1B,IAAI,CAACwB,SAAS,CAAC;MACnB,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACZX,OAAO,CAACC,GAAG,CAACW,IAAI,CAACC,SAAS,CAACF,KAAK,CAAC;MACrC,CAAC;IACT,CAAC;IACDF,SAASA,CAAA,EAAG;MACR,MAAMK,QAAO,GAAI,IAAI,CAACtC,OAAO,CAACM,MAAK;MACnC,IAAI,CAACA,MAAK,GAAI,IAAI,CAACI,OAAO,CAAC6B,IAAI,CAAEjC,MAAM,IAAKA,MAAM,CAACc,EAAC,KAAMkB,QAAQ;IAEtE,CAAC;IACDxB,UAAUA,CAAA,EAAG;MACTpB,KAAI,CACC2B,GAAG,CAAC,kBAAkB,EACtBC,IAAI,CAACC,QAAO,IAAK;QACd,IAAI,CAACb,OAAM,GAAIa,QAAQ,CAACxB,IAAG;MAC/B,CAAC,EACAmC,KAAK,CAACC,KAAI,IAAK;QACZX,OAAO,CAACC,GAAG,CAACW,IAAI,CAACC,SAAS,CAACF,KAAK,CAAC;MACrC,CAAC;IACT,CAAC;IACDpB,OAAOA,CAAA,EAAG;MACNrB,KAAI,CACC2B,GAAG,CAAC,gBAAgB,EACpBC,IAAI,CAACC,QAAO,IAAK;QACd,IAAI,CAACZ,IAAG,GAAIY,QAAQ,CAACxB,IAAI,CAAC,CAAC;QAE3B,MAAMyC,aAAY,GAAI,IAAI,CAACC,UAAU,CAAC,IAAI,CAACzC,OAAO,CAACE,IAAI;QAEvD,IAAI,CAACF,OAAO,CAACC,cAAa,GAAK,GAAE,IAAI,CAACU,IAAI,CAAC+B,mBAAoB,IAAGF,aAAc;MACpF,CAAC,EACAN,KAAK,CAACC,KAAI,IAAK;QACZX,OAAO,CAACC,GAAG,CAACW,IAAI,CAACC,SAAS,CAACF,KAAK,CAAC;MACrC,CAAC;IACT,CAAC;IACDM,UAAUA,CAACvC,IAAI,EAAE;MACb,MAAMyC,OAAM,GAAI;QAAEC,GAAG,EAAE,SAAS;QAAEC,KAAK,EAAE,SAAS;QAAEC,IAAI,EAAE;MAAU;MACpE,OAAO,IAAI3C,IAAI,CAACD,IAAI,CAAC,CAAC6C,kBAAkB,CAACC,SAAS,EAAEL,OAAO;IAC/D,CAAC;IACDM,OAAOA,CAAA,EAAG;MACN,IAAI,CAACjD,OAAO,CAACO,aAAa,CAAC2C,IAAI,CAAC;QAC5BnB,QAAQ,EAAE,IAAI,CAAC/B,OAAO,CAACO,aAAa,CAACoB,MAAM;QAC3CwB,QAAQ,EAAE,EAAE;QACZtD,IAAI,EAAE,EAAE;QACRiC,SAAS,EAAE,EAAE;QACbE,QAAQ,EAAE;MACd,CAAC;MACDR,OAAO,CAACC,GAAG,CAAC,IAAI,CAACzB,OAAO,CAACO,aAAa;IAC1C,CAAC;IACD6C,UAAUA,CAACC,YAAY,EAAE;MACrB;MACA7B,OAAO,CAACC,GAAG,CAAC,IAAI,CAACzB,OAAO,CAACO,aAAa;MAEtC,MAAM+C,KAAI,GAAI,IAAI,CAACtD,OAAO,CAACO,aAAa,CAACgD,OAAO,CAACF,YAAY;MAC7D,IAAIC,KAAI,GAAI,CAAC,CAAC,EAAE;QACZ,IAAI,CAACtD,OAAO,CAACO,aAAa,CAACiD,MAAM,CAACF,KAAK,EAAE,CAAC;MAC9C;;MAEA;MACA,IAAI,CAACG,YAAY,CAAC;IACtB,CAAC;IACDA,YAAYA,CAACC,WAAW,EAAE;MACtB,IAAIlD,YAAW,GAAI;MAEnB,KAAK,IAAIkB,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAI,IAAI,CAAC1B,OAAO,CAACO,aAAa,CAACoB,MAAM,EAAED,CAAC,EAAE,EAAE;QACxDlB,YAAW,IAAK,IAAI,CAACR,OAAO,CAACO,aAAa,CAACmB,CAAC,CAAC,CAAClB,YAAW;MAC7D;MAEA,IAAI,CAACR,OAAO,CAACQ,YAAW,GAAImD,MAAM,CAACnD,YAAY,CAAC,CAACoD,OAAO,CAAC,CAAC;IAC9D,CAAC;IACDC,UAAUA,CAAA,EAAG;MACT;MACA,IAAI,CAAC,IAAI,CAAC7D,OAAO,CAACM,MAAM,EAAE;QACtBX,KAAK,CAAC;UACFmE,OAAO,EAAE,4BAA4B;UACrCC,IAAI,EAAE,WAAW;UACjBC,WAAW,EAAE,IAAI;UACjBC,YAAY,EAAE,IAAI;UAClBC,QAAQ,EAAE,IAAI;UACdC,QAAQ,EAAE;QACd,CAAC,CAAC;QACF;MACJ;MAEA,KAAK,IAAIzC,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAI,IAAI,CAAC1B,OAAO,CAACO,aAAa,CAACoB,MAAM,EAAED,CAAC,EAAE,EAAE;QACxD,MAAM0C,IAAG,GAAI,IAAI,CAACpE,OAAO,CAACO,aAAa,CAACmB,CAAC,CAAC;QAE1C,IAAI,CAAC0C,IAAI,CAACvE,IAAG,IAAK,CAACuE,IAAI,CAACtC,SAAQ,IAAK,CAACsC,IAAI,CAACpC,QAAQ,EAAE;UACjDrC,KAAK,CAAC;YACFmE,OAAO,EAAE,+CAA+C;YACxDC,IAAI,EAAE,WAAW;YACjBC,WAAW,EAAE,IAAI;YACjBC,YAAY,EAAE,IAAI;YAClBC,QAAQ,EAAE,IAAI;YACdC,QAAQ,EAAE;UACd,CAAC,CAAC;UACF;QACJ;MACJ;MAEA,IAAI,CAACnE,OAAO,CAACqE,WAAU,GAAI,IAAI,CAACrE,OAAO,CAACM,MAAM,CAACT,IAAG;MAClD,IAAI,CAACG,OAAO,CAACsE,YAAW,GAAI,IAAI,CAACtE,OAAO,CAACM,MAAM,CAACiE,KAAI;MACpD,IAAI,CAACvE,OAAO,CAACwE,iBAAgB,GAAI,IAAI,CAACxE,OAAO,CAACM,MAAM,CAACmE,UAAS;MAC9D,IAAI,CAACzE,OAAO,CAAC0E,eAAc,GAAI,IAAI,CAAC1E,OAAO,CAACM,MAAM,CAACqE,QAAO;MAC1D,IAAI,CAAC3E,OAAO,CAAC4E,eAAc,GAAI,IAAI,CAAC5E,OAAO,CAACM,MAAM,CAACuE,QAAO;MAC1D,IAAI,CAAC7E,OAAO,CAAC8E,cAAa,GAAI,IAAI,CAAC9E,OAAO,CAACM,MAAM,CAACyE,OAAM;MACxD,IAAI,CAAC/E,OAAO,CAACgF,YAAW,GAAI,IAAI,CAAChF,OAAO,CAACM,MAAM,CAAC2E,KAAI;MACpD,IAAI,CAACjF,OAAO,CAACM,MAAK,GAAI,IAAI,CAACN,OAAO,CAACM,MAAM,CAACc,EAAC;MAE3C,IAAI8D,gBAAe,GAAI,EAAC;MACxB,KAAK,IAAIxD,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAI,IAAI,CAAC1B,OAAO,CAACO,aAAa,CAACoB,MAAM,EAAED,CAAC,EAAE,EAAE;QACxDwD,gBAAe,GAAI,IAAI,CAAClF,OAAO,CAACO,aAAa,CAACmB,CAAC,CAAC,CAAC7B,IAAI,CAACA,IAAG;QACzD,IAAI,CAACG,OAAO,CAACO,aAAa,CAACmB,CAAC,CAAC,CAAC7B,IAAG,GAAIqF,gBAAe;MACxD;MAEAxF,KAAI,CACCyF,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAACnF,OAAO,EACtCsB,IAAI,CAACC,QAAO,IAAK;QACd5B,KAAK,CAAC;UACFmE,OAAO,EAAE,oBAAoB;UAC7BC,IAAI,EAAE,YAAY;UAClBC,WAAW,EAAE,IAAI;UACjBC,YAAY,EAAE,IAAI;UAClBC,QAAQ,EAAE,IAAI;UACdC,QAAQ,EAAE;QACd,CAAC;QAED,IAAI,CAACiB,OAAO,CAAClC,IAAI,CAAC,qBAAqB;MAC3C,CAAC,EACAhB,KAAK,CAACC,KAAI,IAAK;QACZX,OAAO,CAACC,GAAG,CAACW,IAAI,CAACC,SAAS,CAACF,KAAK,CAAC;QACjCxC,KAAK,CAAC;UACFmE,OAAO,EAAE,0DAA0D;UACnEC,IAAI,EAAE,WAAW;UACjBC,WAAW,EAAE,IAAI;UACjBC,YAAY,EAAE,IAAI;UAClBC,QAAQ,EAAE,IAAI;UACdC,QAAQ,EAAE;QACd,CAAC;MACL,CAAC;IACT;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}