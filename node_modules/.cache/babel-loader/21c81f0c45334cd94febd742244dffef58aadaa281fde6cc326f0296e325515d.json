{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'LogIn',\n  data() {\n    return {\n      username: '',\n      password: '',\n      errors: []\n    };\n  },\n  methods: {\n    async submitForm(e) {\n      axios.defaults.headers.common[\"Authorization\"] = \"\";\n      localStorage.removeItem('token');\n      const formData = {\n        username: this.username,\n        password: this.password\n      };\n      await axios.post(\"/api/v1/token/login/\", formData).then(response => {\n        const token = response.data.auth_token;\n        this.$store.commit('setToken', token);\n        axios.defaults.headers.common[\"Authorization\"] = \"Token \" + token;\n        localStorage.setItem(\"token\", token);\n      }).catch(error => {\n        if (error.response) {\n          for (const property in error.response.data) {\n            this.errors.push(`${property}: ${error.response.data[property]}`);\n          }\n          console.log(JSON.stringify(error.response.data));\n        } else if (error.message) {\n          console.log(JSON.stringify(error.message));\n        } else {\n          console.log(JSON.stringify(error));\n        }\n      });\n      axios.get('/api/v1/users/me').then(response => {\n        this.$store.commit('setUser', {\n          'username': response.data.username,\n          'id': response.data.id\n        });\n        localStorage.setItem('username', response.data.username);\n        localStorage.setItem('userid', response.data.id);\n        this.$router.push('/dashboard');\n      }).catch(error => {\n        console.log(JSON.stringify(error));\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","username","password","errors","methods","submitForm","e","defaults","headers","common","localStorage","removeItem","formData","post","then","response","token","auth_token","$store","commit","setItem","catch","error","property","push","console","log","JSON","stringify","message","get","id","$router"],"sources":["/Users/danielkusmider/Library/CloudStorage/OneDrive-Personal/Docs/Projects/ScrapYard/scrap_yard_vue/src/views/LogIn.vue"],"sourcesContent":["<template>\n    <div class=\"page-login\">\n        <div class=\"columns\">\n            <div class=\"column is-4 is-offset-4\">\n                <h1 class=\"title\">Logowanie</h1>\n\n                <form @submit.prevent=\"submitForm\">\n                    <div class=\"field\">\n                        <label>Nazwa użytkownika</label>\n                        <div class=\"control\">\n                            <input type=\"email\" name=\"username\" class=\"input\" v-model=\"username\">\n                        </div>\n                    </div>\n\n                    <div class=\"field\">\n                        <label>Hasło</label>\n                        <div class=\"control\">\n                            <input type=\"password\" name=\"password\" class=\"input\" v-model=\"password\">\n                        </div>\n                    </div>\n\n                    <div class=\"notification is-danger\" v-if=\"errors.length\">\n                        <p v-for=\"error in errors\" v-bind:key=\"error\">{{ error }}</p>\n                    </div>\n\n                    <div class=\"field\">\n                        <div class=\"control\">\n                            <button class=\"button is-success\">Logowanie</button>\n                        </div>\n                    </div>\n                </form>\n\n                <hr>\n                <!-- <router-link to=\"/sign-up\">Kliknij tutaj</router-link> aby się zarejestrować -->\n            </div>\n        </div>\n        <div class=\"columns\">\n            <div class=\"column is-6 is-offset-3 has-text-centered\">\n                <p>ZłomApp jest na razie w fazie testów, więc dostęp ma tylko niewielkie grono użytkowników.</p>\n                <p>Jeśli jesteś zainteresowany korzystaniem z platformy skontaktuj się z administratorem mailowo - kusmiderdaniel@gmail.com</p>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n    name: 'LogIn',\n    data () {\n        return {\n            username: '',\n            password: '',\n            errors: []\n        }\n    },\n    methods: {\n        async submitForm(e) {\n            axios.defaults.headers.common[\"Authorization\"] = \"\"\n\n            localStorage.removeItem('token')\n\n            const formData = {\n                username: this.username,\n                password: this.password\n            }\n\n            await axios\n                .post(\"/api/v1/token/login/\", formData)\n                .then(response => {\n                    const token = response.data.auth_token\n\n                    this.$store.commit('setToken', token)\n\n                    axios.defaults.headers.common[\"Authorization\"] = \"Token \" + token\n\n                    localStorage.setItem(\"token\", token)\n                })\n                .catch(error => {\n                    if (error.response) {\n                        for (const property in error.response.data) {\n                            this.errors.push(`${property}: ${error.response.data[property]}`)\n                        }\n\n                        console.log(JSON.stringify(error.response.data))\n                    } else if (error.message) {\n                        console.log(JSON.stringify(error.message))\n                    } else {\n                        console.log(JSON.stringify(error))\n                    }\n                })\n\n            axios\n                .get('/api/v1/users/me')\n                .then(response => {\n                    this.$store.commit('setUser', {'username': response.data.username, 'id': response.data.id})\n\n                    localStorage.setItem('username', response.data.username)\n                    localStorage.setItem('userid', response.data.id)\n\n                    this.$router.push('/dashboard')\n                })\n                .catch(error => {\n                    console.log(JSON.stringify(error))\n                })\n        }\n    }\n}\n</script>"],"mappings":";AA8CA,OAAOA,KAAI,MAAO,OAAM;AAExB,eAAe;EACXC,IAAI,EAAE,OAAO;EACbC,IAAGA,CAAA,EAAK;IACJ,OAAO;MACHC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE;IACZ;EACJ,CAAC;EACDC,OAAO,EAAE;IACL,MAAMC,UAAUA,CAACC,CAAC,EAAE;MAChBR,KAAK,CAACS,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,IAAI,EAAC;MAElDC,YAAY,CAACC,UAAU,CAAC,OAAO;MAE/B,MAAMC,QAAO,GAAI;QACbX,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBC,QAAQ,EAAE,IAAI,CAACA;MACnB;MAEA,MAAMJ,KAAI,CACLe,IAAI,CAAC,sBAAsB,EAAED,QAAQ,EACrCE,IAAI,CAACC,QAAO,IAAK;QACd,MAAMC,KAAI,GAAID,QAAQ,CAACf,IAAI,CAACiB,UAAS;QAErC,IAAI,CAACC,MAAM,CAACC,MAAM,CAAC,UAAU,EAAEH,KAAK;QAEpClB,KAAK,CAACS,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,IAAI,QAAO,GAAIO,KAAI;QAEhEN,YAAY,CAACU,OAAO,CAAC,OAAO,EAAEJ,KAAK;MACvC,CAAC,EACAK,KAAK,CAACC,KAAI,IAAK;QACZ,IAAIA,KAAK,CAACP,QAAQ,EAAE;UAChB,KAAK,MAAMQ,QAAO,IAAKD,KAAK,CAACP,QAAQ,CAACf,IAAI,EAAE;YACxC,IAAI,CAACG,MAAM,CAACqB,IAAI,CAAE,GAAED,QAAS,KAAID,KAAK,CAACP,QAAQ,CAACf,IAAI,CAACuB,QAAQ,CAAE,EAAC;UACpE;UAEAE,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,SAAS,CAACN,KAAK,CAACP,QAAQ,CAACf,IAAI,CAAC;QACnD,OAAO,IAAIsB,KAAK,CAACO,OAAO,EAAE;UACtBJ,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,SAAS,CAACN,KAAK,CAACO,OAAO,CAAC;QAC7C,OAAO;UACHJ,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,SAAS,CAACN,KAAK,CAAC;QACrC;MACJ,CAAC;MAELxB,KAAI,CACCgC,GAAG,CAAC,kBAAkB,EACtBhB,IAAI,CAACC,QAAO,IAAK;QACd,IAAI,CAACG,MAAM,CAACC,MAAM,CAAC,SAAS,EAAE;UAAC,UAAU,EAAEJ,QAAQ,CAACf,IAAI,CAACC,QAAQ;UAAE,IAAI,EAAEc,QAAQ,CAACf,IAAI,CAAC+B;QAAE,CAAC;QAE1FrB,YAAY,CAACU,OAAO,CAAC,UAAU,EAAEL,QAAQ,CAACf,IAAI,CAACC,QAAQ;QACvDS,YAAY,CAACU,OAAO,CAAC,QAAQ,EAAEL,QAAQ,CAACf,IAAI,CAAC+B,EAAE;QAE/C,IAAI,CAACC,OAAO,CAACR,IAAI,CAAC,YAAY;MAClC,CAAC,EACAH,KAAK,CAACC,KAAI,IAAK;QACZG,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,SAAS,CAACN,KAAK,CAAC;MACrC,CAAC;IACT;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}