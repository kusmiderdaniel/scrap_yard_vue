{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { toast } from 'bulma-toast';\nexport default {\n  name: 'AddClient',\n  data() {\n    return {\n      client: {}\n    };\n  },\n  methods: {\n    confirmCancel() {\n      const confirmMessage = `Czy na pewno chcesz anluować wprowadzanie kontrahenta?`;\n      if (window.confirm(confirmMessage)) {\n        this.$router.push('/dashboard/clients');\n      }\n    },\n    validateName(name) {\n      // Check if the name is not empty\n      return name !== undefined && name.trim() !== '';\n    },\n    validateDocNumber(docNumber) {\n      // Define the regular expressions for validation\n      const regex1 = /^[A-Za-z]{3}\\d{7}$/; // 3 letters + 7 digits - ID\n      const regex2 = /^[A-Za-z]{2}\\d{7}$/; // 2 letters + 7 digits - passport\n\n      // Check if the docNumber matches either of the regular expressions\n      return regex1.test(docNumber) || regex2.test(docNumber);\n    },\n    validateZipCode(zipcode) {\n      const regex = /^\\d{2}-\\d{3}$/; // Pattern for \"00-000\"\n      return regex.test(zipcode);\n    },\n    zipcodeInput() {\n      let zipcode_text = this.client.zipcode;\n      console.log(zipcode_text);\n      if (zipcode_text.length === 2) {\n        zipcode_text += \"-\";\n      }\n      this.client.zipcode = zipcode_text;\n    },\n    submitForm() {\n      // Validate name\n      if (!this.validateName(this.client.name)) {\n        // Display an error message and prevent form submission\n        toast({\n          message: 'Podaj nazwisko i imię.',\n          type: 'is-danger',\n          dismissible: true,\n          pauseOnHover: true,\n          duration: 3000,\n          position: 'bottom-right'\n        });\n        return;\n      }\n\n      // Validate doc_number\n      if (!this.validateDocNumber(this.client.doc_number)) {\n        // Display an error message and prevent form submission\n        toast({\n          message: 'Nieprawidłowy numer dowodu osobistego / Paszportu.',\n          type: 'is-danger',\n          dismissible: true,\n          pauseOnHover: true,\n          duration: 3000,\n          position: 'bottom-right'\n        });\n        return;\n      }\n\n      // Validate zip code\n      if (!this.validateZipCode(this.client.zipcode)) {\n        // Display an error message and prevent form submission\n        toast({\n          message: 'Nieprawidłowy kod pocztowy. Poprawny format to \"00-000\".',\n          type: 'is-danger',\n          dismissible: true,\n          pauseOnHover: true,\n          duration: 3000,\n          position: 'bottom-right'\n        });\n        return;\n      }\n      axios.post(\"/api/v1/clients/\", this.client).then(response => {\n        toast({\n          message: 'Dodano klienta',\n          type: 'is-success',\n          dismissible: true,\n          pauseOnHover: true,\n          duration: 2000,\n          position: 'bottom-right'\n        });\n        this.$router.push('/dashboard/clients');\n      }).catch(error => {\n        console.log(error.response);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","toast","name","data","client","methods","confirmCancel","confirmMessage","window","confirm","$router","push","validateName","undefined","trim","validateDocNumber","docNumber","regex1","regex2","test","validateZipCode","zipcode","regex","zipcodeInput","zipcode_text","console","log","length","submitForm","message","type","dismissible","pauseOnHover","duration","position","doc_number","post","then","response","catch","error"],"sources":["/Users/danielkusmider/Library/CloudStorage/OneDrive-Personal/Docs/Projects/ScrapYard/scrap_yard_vue/src/views/dashboard/AddClient.vue"],"sourcesContent":["<template>\n    <div class=\"page-add-client\">\n        <nav class=\"breadcrumb\" aria-label=\"breadcrumbs\">\n            <ul>\n                <li><router-link to=\"/dashboard\">Dashboard</router-link></li>\n                <li><router-link to=\"/dashboard/clients\">Kontrahenci</router-link></li>\n                <li class=\"is-active\"><router-link to=\"/dashboard/clients/add\" aria-current=\"true\">Nowy kontrahent</router-link></li>\n            </ul>\n        </nav>\n\n        <div class=\"columns is-multiline\">\n            <div class=\"column is-12\">\n                <h1 class=\"title\">Nowy kontrahent</h1>\n            </div>\n\n            <div class=\"column is-6\">\n                <div class=\"field\">\n                    <label>Nazwisko i Imię (na potrzeby sortowania podaj w takiej kolejności)</label>\n                    \n                    <div class=\"control\">\n                        <input type=\"text\" name=\"name\" class=\"input\" v-model=\"client.name\">\n                    </div>\n                </div>\n\n                <div class=\"field\">\n                    <label>Email</label>\n                    \n                    <div class=\"control\">\n                        <input type=\"email\" name=\"email\" class=\"input\" v-model=\"client.email\">\n                    </div>\n                </div>\n\n                <div class=\"field\">\n                    <label>Numer dowodu osobistego / Paszportu</label>\n                    \n                    <div class=\"control\">\n                        <input type=\"email\" name=\"doc_number\" class=\"input\" v-model=\"client.doc_number\">\n                    </div>\n\n                    <p class=\"help is-danger\" v-if=\"!validateDocNumber(client.doc_number)\">\n                        Numer dowodu osobistego musi składać się z 3 liter i 7 cyfr.\n                        Numer paszportu musi składać się z 2 liter i 7 cyfr.\n                    </p>\n                </div>\n\n                <div class=\"field\">\n                    <label>Adres</label>\n                    \n                    <div class=\"control\">\n                        <input type=\"text\" name=\"address1\" class=\"input\" v-model=\"client.address1\">\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"column is-6\">\n                <div class=\"field\">\n                    <label>Kod pocztowy</label>\n                    \n                    <div class=\"control\">\n                        <input type=\"text\" name=\"zipcode\" class=\"input\" placeholder=\"00-000\" v-model=\"client.zipcode\" @input=\"zipcodeInput\">\n                    </div>\n                </div>\n\n                <div class=\"field\">\n                    <label>Miejscowość</label>\n                    \n                    <div class=\"control\">\n                        <input type=\"text\" name=\"place\" class=\"input\" v-model=\"client.place\">\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"column is-12\">\n                <div class=\"field\">\n                    <div class=\"control\">\n                        <button class=\"button is-success mr-4\" @click=\"submitForm\">Zapisz</button>\n                        <button class=\"button is-danger\" @click=\"confirmCancel()\">Anuluj</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport { toast } from 'bulma-toast'\n\nexport default {\n    name: 'AddClient',\n    data() {\n        return {\n            client: {}\n        }\n    },\n    methods: {\n        confirmCancel() {\n            const confirmMessage = `Czy na pewno chcesz anluować wprowadzanie kontrahenta?`\n\n            if (window.confirm(confirmMessage)) {\n                this.$router.push('/dashboard/clients')\n            }\n        },\n        validateName(name) {\n            // Check if the name is not empty\n            return name !== undefined && name.trim() !== '';\n        },\n        validateDocNumber(docNumber) {\n            // Define the regular expressions for validation\n            const regex1 = /^[A-Za-z]{3}\\d{7}$/; // 3 letters + 7 digits - ID\n            const regex2 = /^[A-Za-z]{2}\\d{7}$/; // 2 letters + 7 digits - passport\n\n            // Check if the docNumber matches either of the regular expressions\n            return regex1.test(docNumber) || regex2.test(docNumber);\n        },\n        validateZipCode(zipcode) {\n            const regex = /^\\d{2}-\\d{3}$/; // Pattern for \"00-000\"\n            return regex.test(zipcode);\n        },\n        zipcodeInput() {\n            let zipcode_text = this.client.zipcode\n            console.log(zipcode_text)\n            if (zipcode_text.length === 2) {\n                zipcode_text += \"-\"\n            }\n            this.client.zipcode = zipcode_text\n        },\n        submitForm() {\n\n            // Validate name\n            if (!this.validateName(this.client.name)) {\n                // Display an error message and prevent form submission\n                toast({\n                    message: 'Podaj nazwisko i imię.',\n                    type: 'is-danger',\n                    dismissible: true,\n                    pauseOnHover: true,\n                    duration: 3000,\n                    position: 'bottom-right',\n                });\n                return;\n            }\n\n            // Validate doc_number\n            if (!this.validateDocNumber(this.client.doc_number)) {\n                // Display an error message and prevent form submission\n                toast({\n                    message: 'Nieprawidłowy numer dowodu osobistego / Paszportu.',\n                    type: 'is-danger',\n                    dismissible: true,\n                    pauseOnHover: true,\n                    duration: 3000,\n                    position: 'bottom-right',\n                });\n                return;\n            }\n\n            // Validate zip code\n            if (!this.validateZipCode(this.client.zipcode)) {\n                // Display an error message and prevent form submission\n                toast({\n                    message: 'Nieprawidłowy kod pocztowy. Poprawny format to \"00-000\".',\n                    type: 'is-danger',\n                    dismissible: true,\n                    pauseOnHover: true,\n                    duration: 3000,\n                    position: 'bottom-right',\n                });\n                return;\n            }\n\n            axios\n                .post(\"/api/v1/clients/\", this.client)\n                .then(response => {\n                    toast({\n                        message: 'Dodano klienta',\n                        type: 'is-success',\n                        dismissible: true,\n                        pauseOnHover: true,\n                        duration: 2000,\n                        position: 'bottom-right',\n                    })\n\n                    this.$router.push('/dashboard/clients')\n                })\n                .catch(error => {\n                    console.log(error.response)\n                })\n        }\n    }\n}\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}