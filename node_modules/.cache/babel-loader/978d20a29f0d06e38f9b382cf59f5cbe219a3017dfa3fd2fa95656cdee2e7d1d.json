{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { toast } from 'bulma-toast';\nexport default {\n  name: 'EditClient',\n  data() {\n    return {\n      client: {}\n    };\n  },\n  mounted() {\n    this.getClient();\n  },\n  methods: {\n    getClient() {\n      const clientID = this.$route.params.id;\n      axios.get(`/api/v1/clients/${clientID}`).then(response => {\n        this.client = response.data;\n      }).catch(error => {\n        console.log(JSON.stringify(error));\n      });\n    },\n    submitForm() {\n      const clientID = this.$route.params.id;\n      axios.patch(`/api/v1/clients/${clientID}/`, this.client).then(response => {\n        toast({\n          message: 'Zmiany zostały zapisane',\n          type: 'is-success',\n          dismissible: true,\n          pauseOnHover: true,\n          duration: 2000,\n          position: 'bottom-right'\n        });\n        this.$router.push('/dashboard/clients');\n      }).catch(error => {\n        console.log(JSON.stringify(error));\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","toast","name","data","client","mounted","getClient","methods","clientID","$route","params","id","get","then","response","catch","error","console","log","JSON","stringify","submitForm","patch","message","type","dismissible","pauseOnHover","duration","position","$router","push"],"sources":["/Users/danielkusmider/Library/CloudStorage/OneDrive-Personal/Docs/Projects/ScrapYard/scrap_yard_vue/src/views/dashboard/EditClient.vue"],"sourcesContent":["<template>\n    <div class=\"page-add-client\">\n        <nav class=\"breadcrumb\" aria-label=\"breadcrumbs\">\n            <ul>\n                <li><router-link to=\"/dashboard\">Dashboard</router-link></li>\n                <li><router-link to=\"/dashboard/clients\">Klienci</router-link></li>\n                <li><router-link :to=\"{ name: 'Client', params: { id: client.id }}\">{{ client.name }}</router-link></li>\n                <li class=\"is-active\"><router-link :to=\"{ name: 'EditClient', params: { id: client.id }}\" aria-current=\"true\">Edytuj</router-link></li>\n            </ul>\n        </nav>\n\n        <div class=\"columns is-multiline\">\n            <div class=\"column is-12\">\n                <h1 class=\"title\">Edycja - {{ client.name }}</h1>\n            </div>\n\n            <div class=\"column is-6\">\n                <div class=\"field\">\n                    <label>Imię i Nazwisko</label>\n                    \n                    <div class=\"control\">\n                        <input type=\"text\" name=\"name\" class=\"input\" v-model=\"client.name\">\n                    </div>\n                </div>\n\n                <div class=\"field\">\n                    <label>Email</label>\n                    \n                    <div class=\"control\">\n                        <input type=\"email\" name=\"email\" class=\"input\" v-model=\"client.email\">\n                    </div>\n                </div>\n\n                <div class=\"field\">\n                    <label>Numer dokumentu</label>\n                    \n                    <div class=\"control\">\n                        <input type=\"email\" name=\"email\" class=\"input\" v-model=\"client.doc_number\">\n                    </div>\n                </div>\n\n                <div class=\"field\">\n                    <label>Adres 1</label>\n                    \n                    <div class=\"control\">\n                        <input type=\"text\" name=\"address1\" class=\"input\" v-model=\"client.address1\">\n                    </div>\n                </div>\n\n                <div class=\"field\">\n                    <label>Adres 2</label>\n                    \n                    <div class=\"control\">\n                        <input type=\"text\" name=\"address2\" class=\"input\" v-model=\"client.address2\">\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"column is-6\">\n                <div class=\"field\">\n                    <label>Kod pocztowy</label>\n                    \n                    <div class=\"control\">\n                        <input type=\"text\" name=\"zipcode\" class=\"input\" v-model=\"client.zipcode\">\n                    </div>\n                </div>\n\n                <div class=\"field\">\n                    <label>Miejscowość</label>\n                    \n                    <div class=\"control\">\n                        <input type=\"text\" name=\"place\" class=\"input\" v-model=\"client.place\">\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"column is-12\">\n                <div class=\"field\">\n                    <div class=\"control\">\n                        <button class=\"button is-success\" @click=\"submitForm\">Zapisz zmiany</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport { toast } from 'bulma-toast'\n\nexport default {\n    name: 'EditClient',\n    data() {\n        return {\n            client: {}\n        }\n    },\n    mounted() {\n        this.getClient()\n    },\n    methods: {\n        getClient() {\n            const clientID = this.$route.params.id\n\n            axios\n                .get(`/api/v1/clients/${clientID}`)\n                .then(response => {\n                    this.client = response.data\n                })\n                .catch(error => {\n                    console.log(JSON.stringify(error))\n                })\n        },\n        submitForm() {\n            const clientID = this.$route.params.id\n\n            axios\n                .patch(`/api/v1/clients/${clientID}/`, this.client)\n                .then(response => {\n                    toast({\n                        message: 'Zmiany zostały zapisane',\n                        type: 'is-success',\n                        dismissible: true,\n                        pauseOnHover: true,\n                        duration: 2000,\n                        position: 'bottom-right',\n                    })\n                    \n                    this.$router.push('/dashboard/clients')\n                })\n                .catch(error => {\n                    console.log(JSON.stringify(error))\n                })\n        }\n    }\n}\n</script>"],"mappings":";AAwFA,OAAOA,KAAI,MAAO,OAAM;AACxB,SAASC,KAAI,QAAS,aAAY;AAElC,eAAe;EACXC,IAAI,EAAE,YAAY;EAClBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,MAAM,EAAE,CAAC;IACb;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,SAAS,CAAC;EACnB,CAAC;EACDC,OAAO,EAAE;IACLD,SAASA,CAAA,EAAG;MACR,MAAME,QAAO,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAC;MAErCX,KAAI,CACCY,GAAG,CAAE,mBAAkBJ,QAAS,EAAC,EACjCK,IAAI,CAACC,QAAO,IAAK;QACd,IAAI,CAACV,MAAK,GAAIU,QAAQ,CAACX,IAAG;MAC9B,CAAC,EACAY,KAAK,CAACC,KAAI,IAAK;QACZC,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,SAAS,CAACJ,KAAK,CAAC;MACrC,CAAC;IACT,CAAC;IACDK,UAAUA,CAAA,EAAG;MACT,MAAMb,QAAO,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAC;MAErCX,KAAI,CACCsB,KAAK,CAAE,mBAAkBd,QAAS,GAAE,EAAE,IAAI,CAACJ,MAAM,EACjDS,IAAI,CAACC,QAAO,IAAK;QACdb,KAAK,CAAC;UACFsB,OAAO,EAAE,yBAAyB;UAClCC,IAAI,EAAE,YAAY;UAClBC,WAAW,EAAE,IAAI;UACjBC,YAAY,EAAE,IAAI;UAClBC,QAAQ,EAAE,IAAI;UACdC,QAAQ,EAAE;QACd,CAAC;QAED,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,oBAAoB;MAC1C,CAAC,EACAf,KAAK,CAACC,KAAI,IAAK;QACZC,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,SAAS,CAACJ,KAAK,CAAC;MACrC,CAAC;IACT;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}