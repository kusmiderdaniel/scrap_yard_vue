{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'Receipts',\n  data() {\n    return {\n      receipts: []\n    };\n  },\n  mounted() {\n    this.getReceipts();\n  },\n  methods: {\n    getReceipts() {\n      axios.get('/api/v1/receipts/').then(response => {\n        for (let i = 0; i < response.data.length; i++) {\n          this.receipts.push(response.data[i]);\n        }\n        this.sortByReceiptNumber();\n      }).catch(error => {\n        console.log(JSON.stringify(error));\n      });\n    },\n    formatDate(date) {\n      const options = {\n        day: '2-digit',\n        month: '2-digit',\n        year: 'numeric'\n      };\n      return new Date(date).toLocaleDateString(undefined, options);\n    },\n    formatNumber(number) {\n      // Convert number to string and split it into integer and decimal parts\n      const parts = Number(number).toFixed(2).toString().split('.');\n      const integerPart = parts[0];\n      const decimalPart = parts[1];\n      // Insert space every three digits in the integer part\n      const formattedInteger = integerPart.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n      // Concatenate formatted integer part with decimal part and return\n      return `${formattedInteger},${decimalPart}`;\n    },\n    sortByReceiptNumber() {\n      this.receipts.sort((a, b) => b.date - a.date);\n      console.log('sorted');\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","receipts","mounted","getReceipts","methods","get","then","response","i","length","push","sortByReceiptNumber","catch","error","console","log","JSON","stringify","formatDate","date","options","day","month","year","Date","toLocaleDateString","undefined","formatNumber","number","parts","Number","toFixed","toString","split","integerPart","decimalPart","formattedInteger","replace","sort","a","b"],"sources":["/Users/danielkusmider/Library/CloudStorage/OneDrive-Personal/Docs/Projects/ScrapYard/scrap_yard_vue/src/views/dashboard/Receipts.vue"],"sourcesContent":["<template>\n    <div class=\"page-receipts\">\n        <nav class=\"breadcrumb\" aria-label=\"breadcrumbs\">\n            <ul>\n                <li><router-link to=\"/dashboard\">Dashboard</router-link></li>\n                <li class=\"is-active\"><router-link to=\"/dashboard/receipts\" aria-current=\"true\">Kwity</router-link></li>\n            </ul>\n        </nav>\n\n        <div class=\"columns is-multiline\">\n            <div class=\"column is-12\">\n                <h1 class=\"title\">Kwity</h1>\n            </div>\n\n            <div class=\"column is-12 buttons\">\n                <router-link to=\"/dashboard/receipts/add-receipt\" class=\"button is-success\">Nowy kwit</router-link>\n                <router-link to=\"/dashboard/receipts/accounting\" class=\"button is-info\">Zestawienie księgowe</router-link>\n            </div>\n\n            <div class=\"column is-12 table-container\">\n                <table class=\"table is-fullwidth\">\n                    <thead>\n                        <tr>\n                            <th style=\"width: 300px;\">Numer</th>\n                            <th style=\"width: 200px;\">Data</th>\n                            <th style=\"width: 200px;\">Kontrahent</th>\n                            <th style=\"width: 200px;\">Nr dokumentu</th>\n                            <th style=\"width: 120px;\">Wartość</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        <tr\n                            v-for=\"receipt in receipts\"\n                            v-bind:key=\"receipt.id\"\n                        >\n                            <td>{{ receipt.receipt_number }}</td>\n                            <td>{{ formatDate(receipt.date) }}</td>\n                            <td>{{ receipt.client_name }}</td>\n                            <td>{{ receipt.client_doc_number }}</td>\n                            <td class=\"has-text-right\">{{ formatNumber(receipt.gross_amount) }} zł</td>\n                            <td class=\"has-text-right\">\n                                <router-link :to=\"{ name: 'Receipt', params: { id: receipt.id }}\">Szczegóły</router-link>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n    name: 'Receipts',\n    data() {\n        return {\n            receipts: []\n        }\n    },\n    mounted() {\n        this.getReceipts()\n    },\n    methods: {\n        getReceipts() {\n            axios\n                .get('/api/v1/receipts/')\n                .then(response => {\n                    for (let i = 0; i < response.data.length; i++) {\n                        this.receipts.push(response.data[i])\n                    }\n                    this.sortByReceiptNumber()\n                })\n                .catch(error => {\n                    console.log(JSON.stringify(error))\n                })\n        },\n        formatDate(date) {\n            const options = { day: '2-digit', month: '2-digit', year: 'numeric' };\n            return new Date(date).toLocaleDateString(undefined, options);\n        },\n        formatNumber(number) {\n            // Convert number to string and split it into integer and decimal parts\n            const parts = Number(number).toFixed(2).toString().split('.');\n            const integerPart = parts[0];\n            const decimalPart = parts[1];\n            // Insert space every three digits in the integer part\n            const formattedInteger = integerPart.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n            // Concatenate formatted integer part with decimal part and return\n            return `${formattedInteger},${decimalPart}`;\n        },\n        sortByReceiptNumber() {\n            this.receipts.sort((a, b) => b.date - a.date);\n            console.log('sorted')\n        },\n    }\n}\n\n</script>"],"mappings":";AAsDA,OAAOA,KAAI,MAAO,OAAM;AAExB,eAAe;EACXC,IAAI,EAAE,UAAU;EAChBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,QAAQ,EAAE;IACd;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,WAAW,CAAC;EACrB,CAAC;EACDC,OAAO,EAAE;IACLD,WAAWA,CAAA,EAAG;MACVL,KAAI,CACCO,GAAG,CAAC,mBAAmB,EACvBC,IAAI,CAACC,QAAO,IAAK;QACd,KAAK,IAAIC,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAID,QAAQ,CAACP,IAAI,CAACS,MAAM,EAAED,CAAC,EAAE,EAAE;UAC3C,IAAI,CAACP,QAAQ,CAACS,IAAI,CAACH,QAAQ,CAACP,IAAI,CAACQ,CAAC,CAAC;QACvC;QACA,IAAI,CAACG,mBAAmB,CAAC;MAC7B,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACZC,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,SAAS,CAACJ,KAAK,CAAC;MACrC,CAAC;IACT,CAAC;IACDK,UAAUA,CAACC,IAAI,EAAE;MACb,MAAMC,OAAM,GAAI;QAAEC,GAAG,EAAE,SAAS;QAAEC,KAAK,EAAE,SAAS;QAAEC,IAAI,EAAE;MAAU,CAAC;MACrE,OAAO,IAAIC,IAAI,CAACL,IAAI,CAAC,CAACM,kBAAkB,CAACC,SAAS,EAAEN,OAAO,CAAC;IAChE,CAAC;IACDO,YAAYA,CAACC,MAAM,EAAE;MACjB;MACA,MAAMC,KAAI,GAAIC,MAAM,CAACF,MAAM,CAAC,CAACG,OAAO,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;MAC7D,MAAMC,WAAU,GAAIL,KAAK,CAAC,CAAC,CAAC;MAC5B,MAAMM,WAAU,GAAIN,KAAK,CAAC,CAAC,CAAC;MAC5B;MACA,MAAMO,gBAAe,GAAIF,WAAW,CAACG,OAAO,CAAC,uBAAuB,EAAE,GAAG,CAAC;MAC1E;MACA,OAAQ,GAAED,gBAAiB,IAAGD,WAAY,EAAC;IAC/C,CAAC;IACDxB,mBAAmBA,CAAA,EAAG;MAClB,IAAI,CAACV,QAAQ,CAACqC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACrB,IAAG,GAAIoB,CAAC,CAACpB,IAAI,CAAC;MAC7CL,OAAO,CAACC,GAAG,CAAC,QAAQ;IACxB;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}